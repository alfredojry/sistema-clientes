{"version":3,"sources":["API.ts","components/CustomerCard.tsx","components/CustomersList.tsx","components/AddCustomer.tsx","components/CustomerView.tsx","components/EditCustomer.tsx","App.tsx","index.tsx"],"names":["getCustomers","a","axios","get","customers","Error","getOneCustomer","id","customer","addCustomer","formData","nome","sobrenome","idade","post","saveCustomer","updateCustomer","put","updatedCustomer","deleteCustomer","delete","deletedCustomer","CustomerCard","editCustomer","showCustomerById","showEdit","data_criado","data_atualizado","criado","Date","atualizado","className","toLocaleString","onClick","String","CustomersList","switchComponent","map","Number","AddCustomer","useState","setFormData","handleForm","event","currentTarget","value","onSubmit","htmlFor","onChange","type","disabled","undefined","CustomerView","EditCustomer","idCustomer","App","setCustomers","view","setView","oneCustomer","setOneCustomer","componentName","fetchCustomers","useEffect","then","data","catch","error","console","log","fetchOneCustomer","handleShowEdit","handleUpdateCustomer","preventDefault","status","handleDeleteCustomer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad91e6fa.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nexport const getCustomers = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const customers: AxiosResponse<ApiDataType> = await axios.get('/api/clientes');\n    return customers;\n  } catch (error) {\n    throw new Error(`${error}`);\n  }\n};\n\nexport const getOneCustomer = async (id: number): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const customer: AxiosResponse<ApiDataType> = await axios.get(`/api/clientes/${id}`);\n    return customer;\n  } catch (error) {\n    throw new Error(`${error}`);\n  }\n};\n\nexport const addCustomer = async (formData: Customer): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const customer: Omit<Customer, 'id'| 'data_criado' | 'data_atualizado'> = {\n      nome: formData.nome,\n      sobrenome: formData.sobrenome,\n      idade: formData.idade,\n    };\n    const saveCustomer: AxiosResponse<ApiDataType> = await axios.post('/api/clientes', customer);\n    return saveCustomer;\n  }\n  catch (error) {\n    throw new Error(`${error}`);\n  }\n};\n\nexport const updateCustomer = async (id: string, formData: Customer): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const customer: Omit<Customer, 'id' | 'data_criado' | 'data_atualizado'> = {\n      nome: formData.nome,\n      sobrenome: formData.sobrenome,\n      idade: formData.idade,\n    };\n    const updatedCustomer: AxiosResponse<ApiDataType> = await axios.put(`/api/clientes/${id}`, customer);\n    return updatedCustomer;\n  }\n  catch (error) {\n    throw new Error(`${error}`);\n  }\n};\n\nexport const deleteCustomer = async (id: string): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deletedCustomer: AxiosResponse<ApiDataType> = await axios.delete(`/api/clientes/${id}`);\n    return deletedCustomer;\n  }\n  catch (error) {\n    throw new Error(`${error}`);\n  }\n};\n\n","import React from 'react';\n\ntype Props = CustomerProps & {\n  editCustomer: (id: string, customer: Customer, event: React.FormEvent) => void\n  deleteCustomer: (id: string) => void\n  showCustomerById: (event: React.MouseEvent) => void\n  showEdit: (event: React.MouseEvent) => void\n}\n\nconst CustomerCard: React.FC<Props> = ({\n  customer,\n  editCustomer,\n  deleteCustomer,\n  showCustomerById,\n  showEdit\n}) => {\n  const { id, nome, sobrenome, idade, data_criado, data_atualizado } = customer;\n  const criado: Date = new Date(data_criado);\n  const atualizado: Date = new Date(data_atualizado);\n  if (!customer) return (<div>Carregando...</div>);\n  return (\n    <div className='Card'>\n      <h1>{id}) {nome} {sobrenome}</h1>\n      <h2>Idade: {idade}</h2>\n      <p>Criado: {criado.toLocaleString()}</p>\n      <p>Atualizado: {atualizado.toLocaleString()}</p>\n      <div>\n        <button onClick={showCustomerById} id={String(id)}>Ver</button>\n        <button onClick={showEdit} id={String(id)}>Atualizar</button>\n        <button onClick={() => deleteCustomer(String(id))} id={String(id)}>Apagar</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CustomerCard;\n","import React from 'react';\nimport CustomerCard from './CustomerCard';\n\ntype Props = {\n  customers: Customer[]\n  switchComponent: (componentName: string) => void\n  showCustomerById: (event: React.MouseEvent) => void\n  editCustomer: (id: string, customer: Customer, event: React.FormEvent) => void\n  showEdit: (event: React.MouseEvent) => void\n  deleteCustomer: (id: string) => void\n}\n\nconst CustomersList: React.FC<Props> = ({\n  customers,\n  switchComponent,\n  showCustomerById,\n  editCustomer,\n  showEdit,\n  deleteCustomer\n}) => {\n  \n  return (\n    <div className=\"CustomersList\">\n      <button onClick={() => switchComponent('add-customer')}>\n        Cadastrar cliente\n      </button>\n      {customers.map((customer: Customer) => (\n        <CustomerCard\n          customer={customer}\n          key={Number(customer.id)}\n          showCustomerById={showCustomerById}\n          editCustomer={editCustomer}\n          showEdit={showEdit}\n          deleteCustomer={deleteCustomer}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default CustomersList;\n\n","import React, { useState } from 'react';\n\ntype Props = {\n  saveCustomer: (event: React.FormEvent, formData: Customer | any) => void\n  switchComponent: (componentName: string) => void\n}\n\nconst AddCustomer: React.FC<Props> = ({ saveCustomer, switchComponent }) => {\n  const [formData, setFormData] = useState<Customer | {}>();\n  \n  const handleForm = (event: React.FormEvent<HTMLInputElement>): void => {\n    setFormData({\n      ...formData,\n      [event.currentTarget.id]: event.currentTarget.value,\n    });\n  };\n  \n  return (\n    <div className='AddCustomer'>\n      <button onClick={() => switchComponent('customers-list')}>Voltar</button>\n      <form className='Form' onSubmit={(event) => saveCustomer(event, formData)}>\n        <label htmlFor='nome'>\n          Nome\n          <input onChange={handleForm} type='text' id='nome' />\n        </label>\n        <label htmlFor='sobrenome'>\n          Sobrenome\n          <input onChange={handleForm} type='text' id='sobrenome' />\n        </label>\n        <label htmlFor='idade'>\n          Idade\n          <input onChange={handleForm} type='number' id='idade' />\n        </label>\n        <button disabled={formData === undefined ? true : false}>\n          Cadastrar\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddCustomer;\n\n","import React from 'react';\n\ntype Props = CustomerProps & {\n  editCustomer: (id: string, customer: Customer, event: React.FormEvent) => void\n  deleteCustomer: (id: string) => void\n  switchComponent: (componentName: string) => void\n  showEdit: (event: React.MouseEvent) => void\n}\n\nconst CustomerView: React.FC<Props> = ({\n  customer,\n  editCustomer,\n  deleteCustomer,\n  switchComponent,\n  showEdit,\n}) => {\n  const { id, nome, sobrenome, idade, data_criado, data_atualizado } = customer;\n  const criado: Date = new Date(data_criado);\n  const atualizado: Date = new Date(data_atualizado);\n  if (!customer) return (<div>Carregando...</div>);\n  return (\n    <div className='Card'>\n      <h1>{id}) {nome} {sobrenome}</h1>\n      <h2>Idade: {idade}</h2>\n      <p>Criado: {criado.toLocaleString()}</p>\n      <p>Atualizado: {atualizado.toLocaleString()}</p>\n      <div>\n        <button onClick={() => switchComponent('customers-list')} >Voltar</button>\n        <button onClick={showEdit} id={String(id)}>Atualizar</button>\n        <button onClick={() => deleteCustomer(String(id))} id={String(id)}>Apagar</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CustomerView;\n","import React, { useState } from 'react';\n\ntype Props = {\n  idCustomer: string\n  customer: Customer\n  editCustomer: (id: string, customer: Customer, event: React.FormEvent) => void\n  switchComponent: (componentName: string) => void\n}\n\nconst EditCustomer: React.FC<Props> = ({\n  idCustomer,\n  customer,\n  editCustomer,\n  switchComponent,\n}) => {\n  const [formData, setFormData] = useState<Customer | any>(customer);\n  \n  const handleForm = (event: React.FormEvent<HTMLInputElement>): void => {\n    setFormData({\n      ...formData,\n      [event.currentTarget.id]: event.currentTarget.value,\n    });\n  };\n  \n  return (\n    <div className='AddCustomer'>\n      <button onClick={() => switchComponent('customers-list')}>Voltar</button>\n      <form className='Form' onSubmit={(event) => editCustomer(idCustomer, formData, event)}>\n        <label htmlFor='nome'>\n          Nome\n          <input onChange={handleForm} type='text' id='nome' value={formData.nome} />\n        </label>\n        <label htmlFor='sobrenome'>\n          Sobrenome\n          <input onChange={handleForm} type='text' id='sobrenome' value={formData.sobrenome} />\n        </label>\n        <label htmlFor='idade'>\n          Idade\n          <input onChange={handleForm} type='number' id='idade' value={formData.idade} />\n        </label>\n        <button disabled={formData === undefined ? true : false}>\n          Editar\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditCustomer;\n\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getCustomers, getOneCustomer, addCustomer, updateCustomer, deleteCustomer } from './API';\nimport CustomersList from './components/CustomersList';\nimport AddCustomer from './components/AddCustomer';\nimport CustomerView from './components/CustomerView';\nimport EditCustomer from './components/EditCustomer';\n\nfunction App() {\n  \n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [view, setView] = useState('customers-list');\n  const [oneCustomer, setOneCustomer] = useState<Customer | any>({});\n  const switchComponent = (componentName: string) => {\n    setView(componentName);\n    if (componentName === 'customers-list') fetchCustomers();\n  }\n  \n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  \n  const fetchCustomers = (): void => {\n    getCustomers()\n    .then(({ data }: Customer[] | any) => setCustomers(data))\n    .catch((error: Error) => console.log(error));\n  };\n  \n  const fetchOneCustomer = (id: number, view: string): void => {\n    getOneCustomer(id)\n    .then(({ data }: Customer | any) => {\n      setOneCustomer(data);\n      setView(view);\n    })\n    .catch((error: Error) => console.log(error));\n  };\n  \n  const handleSaveCustomer = (event: React.FormEvent, formData: Customer): void => {\n    event.preventDefault();\n    addCustomer(formData)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Customer not saved')\n        }\n        if (data.id) {\n          fetchOneCustomer(data.id, 'customer')\n        }\n        setView('customer');\n      })\n      .catch(error => console.log(error));\n  };\n  \n  const handleShowCustomer = (event: React.MouseEvent) => {\n    const id = Number(event.currentTarget.id);\n    fetchOneCustomer(id, 'customer');\n  };\n  \n  const handleShowEdit = (event: React.MouseEvent) => {\n    const id = Number(event.currentTarget.id);\n    fetchOneCustomer(id, 'edit-customer');\n  };\n  \n  const handleUpdateCustomer = (id: string, formData: Customer | any, event: React.FormEvent): void => {\n  event.preventDefault();\n    updateCustomer(id, formData)\n      .then(({ status }) => {\n        if (status !== 204) {\n          throw new Error('Error! Customer not updated');\n        }\n        fetchOneCustomer(Number(id), 'customer');\n      })\n      .catch(error => console.log(error));\n  };\n  \n  const handleDeleteCustomer = (id: string): void => {\n    deleteCustomer(id)\n      .then(({ status }) => {\n        if (status !== 204) {\n          throw new Error('Error! Customer not deleted');\n        }\n        setView('customers-list');\n        fetchCustomers();\n      })\n      .catch(error => console.log(error));\n  };\n  \n  return (\n    <div className=\"App\">\n      {view === 'customers-list' && <CustomersList\n        customers={customers}\n        switchComponent={switchComponent}\n        showCustomerById={handleShowCustomer}\n        editCustomer={handleUpdateCustomer}\n        showEdit={handleShowEdit}\n        deleteCustomer={handleDeleteCustomer}\n      />}\n      {view === 'add-customer' && <AddCustomer\n        saveCustomer={handleSaveCustomer}\n        switchComponent={switchComponent}\n      />}\n      {view === 'customer' && <CustomerView\n        customer={oneCustomer}\n        switchComponent={switchComponent}\n        editCustomer={handleUpdateCustomer}\n        showEdit={handleShowEdit}\n        deleteCustomer={handleDeleteCustomer}\n      />}\n      {view === 'edit-customer' && <EditCustomer\n        switchComponent={switchComponent}\n        editCustomer={handleUpdateCustomer}\n        idCustomer={oneCustomer.id}\n        customer={oneCustomer}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}